<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial on Matt Ashby</title>
    <link>/tags/tutorial/</link>
    <description>Recent content in tutorial on Matt Ashby</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>CC-BY</copyright>
    <lastBuildDate>Wed, 05 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tutorial: How to stop hiding your research</title>
      <link>/post/how-to-stop-hiding-your-research/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-stop-hiding-your-research/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post first appeared on the &lt;a href=&#34;https://www.crimcomm.net/post/how-to-stop-hiding-your-research&#34; target=&#34;_blank&#34;&gt;#CrimComm Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You’re a criminal-justice researcher and you’ve just published an article in a top journal. It was a lot of work: you spent months securing ethical approval, collecting data or negotiating access to secondary data, completing the analysis, writing up the results and responding to reviews. You are rightly proud of the result. But – by default and without meaning to – you have probably locked your paper away behind a journal paywall so that many potential readers simply can’t see it.&lt;/p&gt;

&lt;p&gt;While researchers at universities in western countries typically have electronic access to journals, many others who could benefit from criminal-justice research do not. Universities in developing countries may have very few library resources, while access to journals in police and local-government agencies is typically extremely limited, meaning the increasing band of criminal-justice &lt;a href=&#34;https://www.bbc.co.uk/news/world-us-canada-44293921&#34; target=&#34;_blank&#34;&gt;pracademics&lt;/a&gt; (who want to make use of research and have the skills to do so) are often left in the dark.&lt;/p&gt;

&lt;p&gt;The lack of public access to criminal-justice research is particularly worrying because so much of it is relevant to practitioners and policy makers. Imagine a police captain who wants to know &lt;a href=&#34;https://doi.org/10.1007/s12103-020-09518-4&#34; target=&#34;_blank&#34;&gt;what effects the introduction of body-worn cameras is likely to have&lt;/a&gt;, or who has to decide whether to authorize a &lt;a href=&#34;https://doi.org/10.4073/csr.2013.5&#34; target=&#34;_blank&#34;&gt;a ‘scared straight’ program&lt;/a&gt; suggested by one of her officers. Not having access to good-quality research could easily lead to decisions that harm public safety or waste scarce resources.&lt;/p&gt;

&lt;p&gt;Fortunately, &lt;strong&gt;you almost certainly have the right to release a version of your paper online for anyone to read, completely free&lt;/strong&gt;. This is referred to as &lt;em&gt;self-archiving&lt;/em&gt; or as &lt;em&gt;green open access&lt;/em&gt;, to distinguish it from &lt;em&gt;gold open access&lt;/em&gt; in which authors pay an article processing charge (APC) to make the article free on the journal website.&lt;/p&gt;

&lt;p&gt;All the main publishers of criminology journals allow authors to post the &lt;em&gt;pre-print&lt;/em&gt; or &lt;em&gt;submitted&lt;/em&gt; version of an article (the version originally submitted to the journal) on authors&amp;rsquo; personal and university websites, as well as specialist websites known as pre-print servers. Most publishers also allow authors to post the &lt;em&gt;post-print&lt;/em&gt; or &lt;em&gt;accepted&lt;/em&gt; version (the final version submitted to the journal after any revisions), although sometimes with more restrictions. As part of their open-access policies, publishers also do not consider self-archiving of pre- or post-prints as prior publication. There are other benefits to self-archiving, too: &lt;a href=&#34;https://doi.org/10.7554/eLife.52646&#34; target=&#34;_blank&#34;&gt;releasing a pre-print is associated with more attention and citations for the peer-reviewed article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even though authors can release their articles online, recent research shows &lt;a href=&#34;https://doi.org/10.31235/osf.io/wnq7h&#34; target=&#34;_blank&#34;&gt;only about a quarter of articles in criminology journals are open access&lt;/a&gt; (either green or gold). This means that in the past three years, over 9,000 criminology articles that could have been open to the public were instead locked away.&lt;/p&gt;

&lt;p&gt;You might be worried about releasing your article publicly before it has been peer reviewed. What if you&amp;rsquo;ve made a mistake? You can decide not to post the submitted version online, choosing instead to post the accepted version once it is available. But doing this means your research stays hidden during the review and revision process. If a practitioner needs to make a decision now about a policy or practice, they may prefer to have access to your research (perhaps with a note explaining it has not yet been reviewed) rather than have to make the decision blind, only to see your research released a few months later when it no longer matters to them. It&amp;rsquo;s also worth remembering that the peer-review process is not perfect. Many mistakes (and worse) have been published despite being read by multiple reviewers, so authors should not treat peer review as the only determinant of research quality. I post both the submitted and accepted versions of my articles, trusting readers to understand that all research should be read critically.&lt;/p&gt;

&lt;p&gt;The easiest way to discover your self-archiving rights under a particular journal policy is to search the &lt;a href=&#34;https://v2.sherpa.ac.uk/romeo&#34; target=&#34;_blank&#34;&gt;Sherpa Romeo&lt;/a&gt; database, which summarizes policies from &lt;a href=&#34;https://v2.sherpa.ac.uk/view/romeo_visualisations/1.html&#34; target=&#34;_blank&#34;&gt;more than 4,000 publishers&lt;/a&gt;. Take the journal &lt;a href=&#34;http://policing.oxfordjournals.org/&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Policing&lt;/em&gt;&lt;/a&gt;, published by Oxford University Press. Searching on Sherpa Romeo &lt;a href=&#34;https://v2.sherpa.ac.uk/id/publication/687&#34; target=&#34;_blank&#34;&gt;shows&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../sherpa_romeo_screenshot.png&#34; alt=&#34;&#34; title=&#34;Screenshot of the webpage https://v2.sherpa.ac.uk/id/publication/687&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In this case you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;post the submitted (pre-print) version on your own website, an &amp;lsquo;institutional repository&amp;rsquo; (your university website) or a &amp;lsquo;subject repository&amp;rsquo; (a pre-print server),&lt;/li&gt;
&lt;li&gt;post the accepted (post-print) version on your university website or a pre-print repository, but only 24 months after publication (known as an embargo period).
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In both cases, once the article is published you must add a note to the pre-/post-print linking to the published version.&lt;/p&gt;

&lt;p&gt;When it comes to the question of where to post your paper, remember the objective is to get your research into the hands of those who need it. The more widely you distribute your article, the easier it will be for people to find. I post my &lt;a href=&#34;http://lesscrime.info/publication/&#34; target=&#34;_blank&#34;&gt;papers on my own website&lt;/a&gt;, the &lt;a href=&#34;https://iris.ucl.ac.uk/iris/browse/profile?upi=MPJAS93#tabsProfilePub&#34; target=&#34;_blank&#34;&gt;institutional repository run by my university&lt;/a&gt; and a &lt;a href=&#34;http://socarxiv.org/&#34; target=&#34;_blank&#34;&gt;pre-print server called SocArXiv&lt;/a&gt; that hosts papers from across the social sciences. Other options include &lt;a href=&#34;https://www.academia.edu/&#34; target=&#34;_blank&#34;&gt;Academia.edu&lt;/a&gt; and &lt;a href=&#34;https://www.researchgate.net/&#34; target=&#34;_blank&#34;&gt;ResearchGate&lt;/a&gt;, although there are &lt;a href=&#34;https://libraries.ou.edu/content/understanding-academiaedu-and-researchgate&#34; target=&#34;_blank&#34;&gt;reasons you might not want to use them&lt;/a&gt;. I use SocArXiv because it is indexed by search engines such as &lt;a href=&#34;https://scholar.google.co.uk/&#34; target=&#34;_blank&#34;&gt;Google Scholar&lt;/a&gt;. SocArXiv (and some other pre-print servers) also assign a &lt;a href=&#34;https://library.uic.edu/help/article/1966/what-is-a-doi-and-how-do-i-use-them-in-citations&#34; target=&#34;_blank&#34;&gt;digital object identifier (DOI)&lt;/a&gt; to your article, making it easier for people to cite it even before the final version is published. Posting an article on a pre-print server is straightforward and usually takes only a few minutes.&lt;/p&gt;

&lt;p&gt;When posting your paper online, you will be asked to choose a license under which people can re-use it. By default, you own the copyright to any work you post online, but this may restrict others from using your paper by (for example) sending it to a mailing list or hosting a copy for students on their university online learning portal. You can make it easier for people to share your content with others by using an open license, which gives people re-use rights. For example, the &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34; target=&#34;_blank&#34;&gt;Creative Commons Attribution License&lt;/a&gt; allows people to re-use your work for any purpose, as long as they cite you as the author.&lt;/p&gt;

&lt;p&gt;Self archiving can be useful even if you intend to eventually publish your article using gold open access. Gold open access makes it very easy for readers to find an article, but it is only available to authors (or institutions) who can afford the &lt;a href=&#34;https://www.theatlantic.com/science/archive/2016/01/elsevier-academic-publishing-petition/427059/&#34; target=&#34;_blank&#34;&gt;high prices of APCs&lt;/a&gt;. Gold open access also keeps research hidden throughout the peer-review and publishing process. If you plan to make your article gold open access by paying an APC, consider also posting the pre-print version of the article at the time you submit to the journal. If you are a research leader, be it a doctoral adviser or a head of department, you can also encourage self-archiving by establishing it as the norm among your team.&lt;/p&gt;

&lt;p&gt;Open-access publishing isn&amp;rsquo;t enough to ensure your article has an impact among practitioners. You can also present your work at practitioner conferences, publish summaries of the results in practitioner-focused magazines or websites, &lt;a href=&#34;https://www.natureindex.com/news-blog/ten-tips-tweeting-research-academic&#34; target=&#34;_blank&#34;&gt;discuss your findings on social media&lt;/a&gt; or host a webinar. But self archiving to make your work available to practitioners and other readers who don&amp;rsquo;t have access to journal subscriptions is a great first step.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks to &lt;a href=&#34;http://www.icjia.state.il.us/biographies/lily-gleicher&#34; target=&#34;_blank&#34;&gt;Dr Lily Gleicher&lt;/a&gt; and &lt;a href=&#34;https://www.jjay.cuny.edu/faculty/peter-moskos&#34; target=&#34;_blank&#34;&gt;Prof Peter Moskos&lt;/a&gt; for their comments on an earlier draft of this post.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial: Cleaning UK Office for National Statistics data in R</title>
      <link>/post/cleaning-ons-data/</link>
      <pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/cleaning-ons-data/</guid>
      <description>


&lt;p&gt;TL; DR: &lt;a href=&#34;#complete&#34;&gt;skip to the complete script&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The UK &lt;a href=&#34;https://ons.gov.uk/&#34;&gt;Office for National Statistics&lt;/a&gt; (ONS) publishes a
lot of quantitative information on all the topics you’d expect from a national
statistical office, but most of it is released in formats that need manual
cleaning before they can be used for data analysis.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;&#34;&gt;ONS has started publishing some machine-readable data&lt;/a&gt;&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;, but most products
its produces are Excel tables that are optimised for human reading by mimicking
the format of tables in the printed statistical reports that ONS produced for
decades.&lt;/p&gt;
&lt;p&gt;This tutorial talks through how to clean a human-readable table produced by ONS
using the &lt;code&gt;tidyverse&lt;/code&gt; collection of packages, so the resulting &lt;a href=&#34;http://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html&#34;&gt;tidy
data&lt;/a&gt; can
be used for analysis. As an example, we’ll use a file containing &lt;a href=&#34;https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland&#34;&gt;population
estimates for each nation within the United Kingdom&lt;/a&gt;
by five-year age groups.&lt;/p&gt;
&lt;div id=&#34;why-do-this&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Why do this?&lt;/h1&gt;
&lt;p&gt;It might be tempting not to clean the data in R but instead simply open the
relevant file in Excel and make the necessary changes there. This will work, but
there are at least three reasons why cleaning the data in Excel is not
necessarily a good idea.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;It’s harder to repeat the process&lt;/em&gt;. For example, if ONS updates the
table (either because new data is available or to correct a problem) then
you have to repeat the manual process in Excel. If you clean the data in R,
typically all you have to do is run the script again.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;It’s harder to find mistakes&lt;/em&gt;. If you make a mistake while changing data in
Excel but don’t notice until later (e.g. if your results don’t make sense)
it will be difficult to track down exactly what happened. If you use a
script to clean the data, you can go back and run it line-by-line to
identify the problem.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;It’s harder for others to trust your work&lt;/em&gt;. If someone else wants to check
your analysis (e.g. before taking action based on it), that’s more difficult
if you have manipulated the data manually in ways the other person cannot
see.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;before-you-start&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Before you start&lt;/h1&gt;
&lt;p&gt;This tutorial assumes you have &lt;a href=&#34;https://cloud.r-project.org&#34;&gt;R&lt;/a&gt; installed and
that you’re comfortable with the basics of &lt;a href=&#34;https://www.computerworld.com/article/2497143/business-intelligence-beginner-s-guide-to-r-introduction.html&#34;&gt;using R to manipulate data&lt;/a&gt;.
If you don’t have the tidyverse collection of packages installed already, run
&lt;code&gt;install.packages(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt; before continuing. It also a good idea to run
this code from &lt;a href=&#34;https://www.tidyverse.org/articles/2017/12/workflow-vs-script/&#34;&gt;inside a project&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;download&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Download the data&lt;/h1&gt;
&lt;p&gt;Although ONS is relatively good at providing archive data, it’s good practice to
always save an unamended copy of the raw data for any project just in case it
later disappears from the source website.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# download the data file
download.file(
  url = &amp;quot;https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland/mid20182019laboundaries/ukmidyearestimates20182019ladcodes.xls&amp;quot;,
  destfile = &amp;quot;ons_pop_data.xls&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;load&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Load the data into R&lt;/h1&gt;
&lt;p&gt;Since the data are in an Excel file, we can use the &lt;a href=&#34;https://readxl.tidyverse.org&#34;&gt;&lt;code&gt;readxl&lt;/code&gt;&lt;/a&gt;
package to read it into R&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;. ONS publishes data using a mixture of file formats,
including both the pre-2007 Excel &lt;code&gt;.xls&lt;/code&gt; file format and the current &lt;code&gt;.xlsx&lt;/code&gt;
format&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;. The &lt;code&gt;read_excel()&lt;/code&gt; function can handle both &lt;code&gt;.xls&lt;/code&gt; and &lt;code&gt;.xlsx&lt;/code&gt;
files, but can only load a single sheet from within an Excel workbook (i.e.
file). We can use the &lt;code&gt;excel_sheets()&lt;/code&gt; function to get the names of each sheet
in the Excel file.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;readxl&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✔ ggplot2 3.2.1     ✔ purrr   0.3.2
## ✔ tibble  2.1.3     ✔ dplyr   0.8.3
## ✔ tidyr   0.8.3     ✔ stringr 1.4.0
## ✔ readr   1.3.1     ✔ forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;excel_sheets(&amp;quot;ons_pop_data.xls&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Contents &amp;quot;                  &amp;quot;Terms and conditions &amp;quot;     
##  [3] &amp;quot;Notes and definitions&amp;quot;      &amp;quot;Admin. geography hierarchy&amp;quot;
##  [5] &amp;quot;MYE1&amp;quot;                       &amp;quot;MYE2-All&amp;quot;                  
##  [7] &amp;quot;MYE2 - Males&amp;quot;               &amp;quot;MYE2 - Females&amp;quot;            
##  [9] &amp;quot;MYE3&amp;quot;                       &amp;quot;MYE4 &amp;quot;                     
## [11] &amp;quot;MYE 5&amp;quot;                      &amp;quot;MYE 6&amp;quot;                     
## [13] &amp;quot;Related publications&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that some of the sheets have a space at the end of the name, which will be
invisible when viewing the file in Excel but which we need to know about to
specify the sheet name for &lt;code&gt;read_excel()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Contents&lt;/code&gt; sheet contains a short description of the data in each of the
other sheets. There are blank rows between every row in this table (an example
of how ONS optimises for human rather than computer readability), but we can
remove these rows using the &lt;code&gt;drop_na()&lt;/code&gt; function from the &lt;code&gt;tidyr&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;drop_na(read_excel(&amp;quot;ons_pop_data.xls&amp;quot;, sheet = &amp;quot;Contents &amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 12 x 2
##    Contents             `Population Estimates for UK, England and Wales, S…
##    &amp;lt;chr&amp;gt;                &amp;lt;chr&amp;gt;                                              
##  1 Terms and conditions Terms and conditions                               
##  2 Notes and definitio… Notes and definitions                              
##  3 Admin. geography hi… Administrative geography hierarchy for the United …
##  4 MYE1                 Population estimates: Summary for the UK, mid-2018 
##  5 MYE2 - All           Population estimates: Persons by single year of ag…
##  6 MYE2 - M             Population estimates: Males by single year of age …
##  7 MYE2 - F             Population estimates: Females by single year of ag…
##  8 MYE3                 Components of population change for local authorit…
##  9 MYE4                 Population estimates: Summary for the UK, mid-1971…
## 10 MYE5                 Population estimates: Population density for local…
## 11 MYE6                 Median age of population for local authorities in …
## 12 Related publications Provides links to further population statistics &amp;amp; …&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We’re going to use the data from the mid-2018 UK population summary, so we want
the &lt;code&gt;MYE1&lt;/code&gt; sheet. We can now use &lt;code&gt;read_excel()&lt;/code&gt; to load the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file_data &amp;lt;- read_excel(&amp;quot;ons_pop_data.xls&amp;quot;, sheet = &amp;quot;MYE1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * `` -&amp;gt; ...2
## * `` -&amp;gt; ...3
## * `` -&amp;gt; ...4
## * `` -&amp;gt; ...5
## * `` -&amp;gt; ...6
## * … and 3 more problems&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;clean&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Clean the data&lt;/h1&gt;
&lt;p&gt;In Excel, the &lt;code&gt;MYE1&lt;/code&gt; sheet looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/cleaning-ons-data/mye1-sheet-preview.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;file_data&lt;/code&gt; object contains the result of the &lt;code&gt;read_excel()&lt;/code&gt; function’s
attempt to load this sheet into R:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 33 x 9
##    Contents     ...2   ...3   ...4   ...5   ...6    ...7    ...8    ...9   
##    &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  
##  1 &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   
##  2 MYE1: Popul… &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;quot;Pleas… This m… I need… &amp;quot;This …
##  3 &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   
##  4 Country / C… K0200… K0300… K0400… E9200… W92000… S92000… N92000… &amp;lt;NA&amp;gt;   
##  5 &amp;lt;NA&amp;gt;         UNITE… GREAT… ENGLA… ENGLA… WALES   SCOTLA… NORTHE… &amp;lt;NA&amp;gt;   
##  6 &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   
##  7 All Persons  66435… 64553… 59115… 55977… 3138631 5438100 1881641 &amp;lt;NA&amp;gt;   
##  8 Males        32790… 31864… 29215… 27667… 1547309 2648751 926200  &amp;lt;NA&amp;gt;   
##  9 Females      33645… 32689… 29900… 28309… 1591322 2789349 955441  &amp;lt;NA&amp;gt;   
## 10 &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;   
## # … with 23 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This isn’t very useful. There are several problems we need to fix:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;the column names don’t reflect the data in each column,&lt;/li&gt;
&lt;li&gt;all the columns have the type &lt;code&gt;&amp;lt;chr&amp;gt;&lt;/code&gt; (character) even when the columns
contain numbers,&lt;/li&gt;
&lt;li&gt;there are several blank or partially blank rows,&lt;/li&gt;
&lt;li&gt;the feedback questionnaire in the top-left corner of the sheet means
&lt;code&gt;file_data&lt;/code&gt; contains an extra column,&lt;/li&gt;
&lt;li&gt;there is a row containing a footnote,&lt;/li&gt;
&lt;li&gt;the data are in wide rather than long format.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can fix all of these either using the parameters of &lt;code&gt;read_excel()&lt;/code&gt; or&lt;br /&gt;
functions from the tidyverse packages.&lt;/p&gt;
&lt;p&gt;We can exclude all the cells in the sheet except those containing data with the
&lt;code&gt;range =&lt;/code&gt; parameter of &lt;code&gt;read_excel()&lt;/code&gt;. We can either specify the cell range
manually (e.g. &lt;code&gt;range = &amp;quot;A5:H31&amp;quot;&lt;/code&gt;) or we can use one of the &lt;code&gt;cell_*&lt;/code&gt; collection
of helper functions from the &lt;code&gt;cellranger&lt;/code&gt; package, which is loaded with
&lt;code&gt;readxl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can work out which cells we want to retain either by opening the file in
Excel and noting which rows contain the data, or by running &lt;code&gt;View(file_data)&lt;/code&gt; in
R and then adjusting the value of &lt;code&gt;range =&lt;/code&gt; in &lt;code&gt;read_excel()&lt;/code&gt; until we are
happy with the result.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file_data &amp;lt;- read_excel(&amp;quot;ons_pop_data.xls&amp;quot;,
  sheet = &amp;quot;MYE1&amp;quot;,
  range = cell_rows(5:31)
)

file_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 26 x 8
##    `Country / Code` K02000001 K03000001 K04000001 E92000001 W92000004
##    &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;    
##  1 &amp;lt;NA&amp;gt;             UNITED K… GREAT BR… ENGLAND … ENGLAND   WALES    
##  2 &amp;lt;NA&amp;gt;             &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;     
##  3 All Persons      66435550  64553909  59115809  55977178  3138631  
##  4 Males            32790202  31864002  29215251  27667942  1547309  
##  5 Females          33645348  32689907  29900558  28309236  1591322  
##  6 &amp;lt;NA&amp;gt;             &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;     
##  7 Age Groups       &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;     
##  8 0-4              3914028   3792292   3515430   3346727   168703   
##  9 5-9              4138524   4009409   3708320   3523866   184454   
## 10 10-14            3858894   3738572   3450782   3274119   176663   
## # … with 16 more rows, and 2 more variables: S92000003 &amp;lt;chr&amp;gt;,
## #   N92000002 &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This deals with the unwanted rows above and below the table, as well as the
unwanted columns produced because of the feedback questionnaire.&lt;/p&gt;
&lt;p&gt;The next problem is that the column names represent the &lt;a href=&#34;https://webarchive.nationalarchives.gov.uk/20160106185615/http://www.ons.gov.uk/ons/guide-method/geography/beginner-s-guide/index.html&#34;&gt;GSS statistical
codes&lt;/a&gt;
for the different nations of the UK, rather than the names of the nations. You
may prefer the codes, but we’ll assume that you want the names.&lt;/p&gt;
&lt;p&gt;We can use functions from the &lt;code&gt;magrittr&lt;/code&gt; package to work with individual values
in the data. All these functions are aliases for base R functions, but can be
easier to work with.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;magrittr&amp;quot;)

# set a value for the first row in the first column, which is currently blank
file_data &amp;lt;- inset(file_data, 1, 1, &amp;quot;group&amp;quot;)

# replace the existing column names with the values from the first row
file_data &amp;lt;- set_colnames(file_data, file_data[1, ])

# remove the first row, which we no longer need, using slice() from dplyr
file_data &amp;lt;- slice(file_data, 2:n())

file_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 25 x 8
##    group `UNITED KINGDOM` `GREAT BRITAIN` `ENGLAND AND WA… ENGLAND WALES
##    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;           &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;
##  1 &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;             &amp;lt;NA&amp;gt;            &amp;lt;NA&amp;gt;             &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt; 
##  2 All … 66435550         64553909        59115809         559771… 3138…
##  3 Males 32790202         31864002        29215251         276679… 1547…
##  4 Fema… 33645348         32689907        29900558         283092… 1591…
##  5 &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;             &amp;lt;NA&amp;gt;            &amp;lt;NA&amp;gt;             &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt; 
##  6 Age … &amp;lt;NA&amp;gt;             &amp;lt;NA&amp;gt;            &amp;lt;NA&amp;gt;             &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt; 
##  7 0-4   3914028          3792292         3515430          3346727 1687…
##  8 5-9   4138524          4009409         3708320          3523866 1844…
##  9 10-14 3858894          3738572         3450782          3274119 1766…
## 10 15-19 3669250          3555359         3270795          3096575 1742…
## # … with 15 more rows, and 2 more variables: SCOTLAND &amp;lt;chr&amp;gt;, `NORTHERN
## #   IRELAND` &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we remove any rows containing empty cells, since none of the data rows
contain empty cells (see &lt;a href=&#34;#tips&#34;&gt;Tips&lt;/a&gt;, below, for tables where this isn’t the
case).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file_data &amp;lt;- drop_na(file_data)

file_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 22 x 8
##    group `UNITED KINGDOM` `GREAT BRITAIN` `ENGLAND AND WA… ENGLAND WALES
##    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;           &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;
##  1 All … 66435550         64553909        59115809         559771… 3138…
##  2 Males 32790202         31864002        29215251         276679… 1547…
##  3 Fema… 33645348         32689907        29900558         283092… 1591…
##  4 0-4   3914028          3792292         3515430          3346727 1687…
##  5 5-9   4138524          4009409         3708320          3523866 1844…
##  6 10-14 3858894          3738572         3450782          3274119 1766…
##  7 15-19 3669250          3555359         3270795          3096575 1742…
##  8 20-24 4184575          4068584         3717960          3512654 2053…
##  9 25-29 4527175          4404612         4022272          3815924 2063…
## 10 30-34 4463357          4337288         3976030          3787597 1884…
## # … with 12 more rows, and 2 more variables: SCOTLAND &amp;lt;chr&amp;gt;, `NORTHERN
## #   IRELAND` &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can convert the data from wide to long using &lt;code&gt;gather()&lt;/code&gt; from the &lt;code&gt;tidyr&lt;/code&gt;
package. &lt;code&gt;gather()&lt;/code&gt; can be a slightly confusing function to use, but there are
some useful tutorials available by &lt;a href=&#34;https://garrettgman.github.io/tidying/#gather&#34;&gt;Garrett Grolemund&lt;/a&gt;, &lt;a href=&#34;https://uc-r.github.io/tidyr#gather--function&#34;&gt;UC Business Analytics&lt;/a&gt; and &lt;a href=&#34;https://r4ds.had.co.nz/tidy-data.html#spreading-and-gathering&#34;&gt;R for Data
Science&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file_data &amp;lt;- gather(file_data, key = &amp;quot;geography&amp;quot;, value = &amp;quot;population&amp;quot;, -group)

file_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 154 x 3
##    group       geography      population
##    &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;     
##  1 All Persons UNITED KINGDOM 66435550  
##  2 Males       UNITED KINGDOM 32790202  
##  3 Females     UNITED KINGDOM 33645348  
##  4 0-4         UNITED KINGDOM 3914028   
##  5 5-9         UNITED KINGDOM 4138524   
##  6 10-14       UNITED KINGDOM 3858894   
##  7 15-19       UNITED KINGDOM 3669250   
##  8 20-24       UNITED KINGDOM 4184575   
##  9 25-29       UNITED KINGDOM 4527175   
## 10 30-34       UNITED KINGDOM 4463357   
## # … with 144 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we will neaten the data by converting the population variable to
numeric and the geography variable to title case (using a function from the
&lt;code&gt;stringr&lt;/code&gt; package).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_data &amp;lt;- mutate(
  file_data,
  geography = str_to_title(geography),
  population = as.numeric(population)
)

tidy_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 154 x 3
##    group       geography      population
##    &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;               &amp;lt;dbl&amp;gt;
##  1 All Persons United Kingdom   66435550
##  2 Males       United Kingdom   32790202
##  3 Females     United Kingdom   33645348
##  4 0-4         United Kingdom    3914028
##  5 5-9         United Kingdom    4138524
##  6 10-14       United Kingdom    3858894
##  7 15-19       United Kingdom    3669250
##  8 20-24       United Kingdom    4184575
##  9 25-29       United Kingdom    4527175
## 10 30-34       United Kingdom    4463357
## # … with 144 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;complete&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;A complete script&lt;/h1&gt;
&lt;p&gt;Using the &lt;a href=&#34;https://cran.r-project.org/package=magrittr/vignettes/magrittr.html&#34;&gt;&lt;code&gt;magrittr&lt;/code&gt; pipe &lt;code&gt;%&amp;gt;%&lt;/code&gt;&lt;/a&gt;,
we can combine all these cleaning steps together, which makes the code more
compact and (arguably) more readable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;lubridate&amp;quot;) # lubridate and magrittr are part of the
library(&amp;quot;magrittr&amp;quot;) # tidyverse but not loaded with it by default
library(&amp;quot;readxl&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)

tidy_data &amp;lt;- read_excel(&amp;quot;ons_pop_data.xls&amp;quot;,
  sheet = &amp;quot;MYE1&amp;quot;,
  range = cell_rows(5:31)
) %&amp;gt;%
  inset(1, 1, &amp;quot;group&amp;quot;) %&amp;gt;%
  set_colnames(.[1, ]) %&amp;gt;%
  slice(2:n()) %&amp;gt;%
  drop_na() %&amp;gt;%
  gather(key = &amp;quot;geography&amp;quot;, value = &amp;quot;population&amp;quot;, -group) %&amp;gt;%
  mutate(
    geography = str_to_title(geography),
    population = as.numeric(population)
  )

tidy_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 154 x 3
##    group       geography      population
##    &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;               &amp;lt;dbl&amp;gt;
##  1 All Persons United Kingdom   66435550
##  2 Males       United Kingdom   32790202
##  3 Females     United Kingdom   33645348
##  4 0-4         United Kingdom    3914028
##  5 5-9         United Kingdom    4138524
##  6 10-14       United Kingdom    3858894
##  7 15-19       United Kingdom    3669250
##  8 20-24       United Kingdom    4184575
##  9 25-29       United Kingdom    4527175
## 10 30-34       United Kingdom    4463357
## # … with 144 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;tips&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Tips for other ONS tables&lt;/h1&gt;
&lt;p&gt;There is a huge number of ONS tables available, some having different formatting
issues from those mentioned above. These are some of the issues I’ve come across
and potential ways to deal with them.&lt;/p&gt;
&lt;p&gt;(The examples below all assume your data is in a data frame/tibble called
&lt;code&gt;data&lt;/code&gt;.)&lt;/p&gt;
&lt;div id=&#34;missing-values-in-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Missing values in the data&lt;/h2&gt;
&lt;p&gt;Many ONS datasets have missing values, and some even have multiple
values representing different reasons for the values being missing. For example,
data for small geographic areas might be missing because the data could not be
collected for a particular location or have been redacted to prevent disclosure
of personal information.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;na =&lt;/code&gt; parameter of &lt;code&gt;read_excel()&lt;/code&gt; can be used to specify values in the
data that should be treated as missing. For example, if an ONS table uses a
blank cell to represent data that could not be collected and &lt;code&gt;**&lt;/code&gt; to represent
redacted data, &lt;code&gt;read_excel(&amp;quot;data.xlsx&amp;quot;, sheet = &amp;quot;Sheet 1&amp;quot;, na = c(&amp;quot;&amp;quot;, &amp;quot;**&amp;quot;))&lt;/code&gt;
will ensure both values are represented by &lt;code&gt;NA&lt;/code&gt; in R.&lt;/p&gt;
&lt;p&gt;It isn’t possible to use &lt;code&gt;drop_na()&lt;/code&gt; to remove empty rows if there are missing
values in the data, because &lt;code&gt;drop_na()&lt;/code&gt; removes rows that contain &lt;em&gt;any&lt;/em&gt; missing
values. Instead, you can use &lt;code&gt;remove_empty()&lt;/code&gt; from the &lt;code&gt;janitor&lt;/code&gt; package to
remove rows or columns that are entirely empty. If there are rows that you want
to remove from the data that contain some missing values and some values that
are not missing, use &lt;code&gt;filter()&lt;/code&gt; from &lt;code&gt;dplyr&lt;/code&gt; based on the value of a specific
column. For example, to remove rows with the value of &lt;code&gt;population&lt;/code&gt; missing,
use &lt;code&gt;filter(data, !is.na(population))&lt;/code&gt;. To remove single rows manually by row
number, use &lt;code&gt;slice()&lt;/code&gt;, also from &lt;code&gt;dplyr&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;multiple-tables-in-a-single-sheet&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Multiple tables in a single sheet&lt;/h2&gt;
&lt;p&gt;Sometimes multiple related data tables are placed on a single Excel sheet. You
can either import them separately and then combine the resulting datasets
manually (e.g. with &lt;code&gt;rbind()&lt;/code&gt;) or just treat the rows or columns between each
table as clutter that can be removed using a combination of &lt;code&gt;drop_na()&lt;/code&gt; and
&lt;code&gt;slice()&lt;/code&gt; as above. In the latter case, modify the &lt;code&gt;range =&lt;/code&gt; argument of
&lt;code&gt;read_excel()&lt;/code&gt; so that the selected cells/rows/columns include all the tables.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;category-names-or-values-with-footnote-markers&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Category names or values with footnote markers&lt;/h2&gt;
&lt;p&gt;If tables have multiple footnotes, some categories or values may end in a
footnote marker (typically a number). To remove these, use &lt;code&gt;str_remove()&lt;/code&gt; from
&lt;code&gt;stringr&lt;/code&gt;. For example, if the column &lt;code&gt;place&lt;/code&gt; contains values with footnote
markers, you can use &lt;code&gt;mutate(data, place = str_remove(place, &amp;quot;\\d+$&amp;quot;))&lt;/code&gt; to
remove them, where &lt;code&gt;\\d+&lt;/code&gt; is a &lt;a href=&#34;https://stringr.tidyverse.org/articles/regular-expressions.html#matching-multiple-characters&#34;&gt;regular expression that matches one or more
numeric characters&lt;/a&gt;
and &lt;a href=&#34;https://stringr.tidyverse.org/articles/regular-expressions.html#anchors&#34;&gt;&lt;code&gt;$&lt;/code&gt; matches only numeric characters at the end of the
value&lt;/a&gt;
of &lt;code&gt;place&lt;/code&gt;. This only works for non-numeric values with numeric footnote
markers, since the regular expression &lt;code&gt;\\d+$&lt;/code&gt; will match any sequence of numbers
at the end of a cell.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dates-and-date-ranges-stored-as-text&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dates and date ranges stored as text&lt;/h2&gt;
&lt;p&gt;Since many ONS statistics are published for financial years, time periods are
often stored as strings showing, for example, &lt;code&gt;2018-19&lt;/code&gt;. Converting these to
dates helps with things like plotting values on an axis with date values or
using the data in a time-series model.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;lubridate&lt;/code&gt; package is very useful for converting dates. You can either
represent each date as a specific moment in time, or as an interval in time.
For example, if a financial year is stored as &lt;code&gt;2018-19&lt;/code&gt; in the &lt;code&gt;year&lt;/code&gt; column,
you can extract the specific moment the year started using
&lt;code&gt;mutate(year_beginning = ymd(paste(str_sub(year, 0, 4)), &amp;quot;04&amp;quot;, &amp;quot;01&amp;quot;))&lt;/code&gt;. In this
code, &lt;code&gt;str_sub(year, 0, 4)&lt;/code&gt; extracts the first four characters from the string
&lt;code&gt;2018-19&lt;/code&gt;, &lt;code&gt;paste()&lt;/code&gt; creates a single character value for 1 April in the given
year (e.g. &lt;code&gt;2018 04 01&lt;/code&gt;) and &lt;code&gt;ymd()&lt;/code&gt; converts that string into a date object.&lt;/p&gt;
&lt;p&gt;To store a date as an interval, we extract both the date on which the year
started and the date it ended. For example,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mutate(
  data,
  year_interval = interval(
    ymd(paste(str_sub(year, 0, 4), &amp;quot;04&amp;quot;, &amp;quot;01&amp;quot;)),
    ymd(paste(str_sub(year, -2), &amp;quot;03&amp;quot;, &amp;quot;31&amp;quot;))
  )
)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;r-session-information&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R session information&lt;/h2&gt;
&lt;p&gt;The code in this tutorial was run in R with the following configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.6.0 (2019-04-26)
## Platform: x86_64-apple-darwin15.6.0 (64-bit)
## Running under: macOS Mojave 10.14.5
## 
## Matrix products: default
## BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
## LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib
## 
## locale:
## [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] lubridate_1.7.4 magrittr_1.5    forcats_0.4.0   stringr_1.4.0  
##  [5] dplyr_0.8.3     purrr_0.3.2     readr_1.3.1     tidyr_0.8.3    
##  [9] tibble_2.1.3    ggplot2_3.2.1   tidyverse_1.2.1 readxl_1.3.1   
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_1.0.2       cellranger_1.1.0 pillar_1.4.2     compiler_3.6.0  
##  [5] tools_3.6.0      zeallot_0.1.0    digest_0.6.20    jsonlite_1.6    
##  [9] evaluate_0.14    nlme_3.1-141     gtable_0.3.0     lattice_0.20-38 
## [13] pkgconfig_2.0.2  rlang_0.4.0      cli_1.1.0        rstudioapi_0.10 
## [17] yaml_2.2.0       haven_2.1.1      blogdown_0.14    xfun_0.8        
## [21] withr_2.1.2      xml2_1.2.2       httr_1.4.1       knitr_1.24      
## [25] vctrs_0.2.0      hms_0.5.0        generics_0.0.2   grid_3.6.0      
## [29] tidyselect_0.2.5 glue_1.3.1       R6_2.4.0         fansi_0.4.0     
## [33] rmarkdown_1.14   bookdown_0.12    modelr_0.1.5     backports_1.1.4 
## [37] scales_1.0.0     htmltools_0.3.6  rvest_0.3.4      assertthat_0.2.1
## [41] colorspace_1.4-1 utf8_1.1.4       stringi_1.4.3    lazyeval_0.2.2  
## [45] munsell_0.5.0    broom_0.5.2      crayon_1.3.4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;ONS refers to this as ‘open data’, although (almost) all the products it
produces are already &lt;a href=&#34;https://www.ons.gov.uk/methodology/geography/licences&#34;&gt;open licensed under the Open Government
Licence&lt;/a&gt;&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;The &lt;code&gt;readxl&lt;/code&gt; package is &lt;a href=&#34;https://www.tidyverse.org/packages/&#34;&gt;installed as part of the
tidyverse&lt;/a&gt; but is not automatically loaded
by &lt;code&gt;library(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;I have not been able to work out why some ONS files are in &lt;code&gt;.xls&lt;/code&gt; format
and some in &lt;code&gt;.xlsx&lt;/code&gt;.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
